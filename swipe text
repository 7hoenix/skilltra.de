class TeamMembers < ActiveRecord::Base
  belongs_to :user
  belongs_to :team, class_name => "USER", :foreign_key => "team_id"
  validates_presence_of :user_id, :team_id

  def self.exists?(user, team)
    not find_by_user_id_and_team_id(user, team).nil?
  end

  def self.request(user, team)
    unless user == team or TeamMembers.exists?(user, team)
      transaction do
        create(:user => user, :team => team, :status => 'pending')
        create(:user => team, :team => user, :status => 'requested')
      end
    end
  end

  def self.accept(user, team)
    transaction do
      accepted_at = Time.now
      accept_one_side(user, team, accepted_at)
      accept_one_side(team, user, accepted_at)
    end
  end

    def self.breakup(user, team)
      transaction do
        destroy(find_by_user_id_and_team_id(user, team))
        destroy(find_by_user_id_and_team_id(team, user))
      end
    end

  private

  def self.accept_one_side(user, team, accepted_at)
    request = find_by_user_id_and_team_id(user, team)
    request.status = 'accepted'
    request.accepted_at = accepted_at
    request.save!
  end
end












Copy from Main page


Most founders take hours, days, or even weeks off from what they <strong>should</strong> be doing to learn some secondary skill they are never going to use again. You don't have to. Instead, play to your strengths. . . all the time.









<li><%= link_to conversations_path do %>
                 <span class="badge"><% if current_user.open_jobs %>
                       <%= current_user.open_jobs %>
                   <% end %>
                 </span> Open Projects
            <% end %>
          </li>








Split

<%= ab_test('home_headline', 'If You Could Have One Skill Set for a Day. . .<br><strong>What Would it Be?</strong>', 'Stuck on Something?') %>









Facebook Auth


class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController
attr_accessor :name

  def facebook
    # You need to implement the method below in your model (e.g. app/models/user.rb)
    @user = User.from_omniauth(request.env["omniauth.auth"])

    if @user.persisted?

      if @user.balance
        sign_in_and_redirect @user, :event => :authentication #this will throw if @user is not activated
      set_flash_message(:notice, :success, :kind => "Facebook") if is_navigational_format?

      else
      @user.create_account
      @user.balance = 5
      sign_in_and_redirect @user, :event => :authentication #this will throw if @user is not activated
      set_flash_message(:notice, :success, :kind => "Facebook") if is_navigational_format?
      end

    else

      session["devise.facebook_data"] = request.env["omniauth.auth"]
      redirect_to edit_user_registration_url
    end
end














class User < ActiveRecord::Base
  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :timeoutable and :omniauthable
  devise :omniauthable, :omniauth_providers => [:facebook, :linkedin]

  devise :database_authenticatable, :registerable,
        :recoverable, :rememberable, :trackable
       # :validatable,

         has_many :posts, dependent: :destroy
         has_one :account, dependent: :destroy
         has_many :jobs, dependent: :destroy
         has_many :bids, dependent: :destroy


 # This is for omniauth
  def self.from_omniauth(auth)
    where(provider: auth.provider, uid: auth.uid).first_or_create do |user|
      user.email = auth.info.email
      user.password = Devise.friendly_token[0,20]
      user.name = auth.info.name   # assuming the user model has a name
      user.image = auth.info.image # assuming the user model has an image

    end
  end

  def self.new_with_session(params, session)
    super.tap do |user|
      if data = session["devise.facebook_data"] && session["devise.facebook_data"]["extra"]["raw_info"]
        user.email = data["email"] if user.email.blank?

        end
      end
    end

#linked in omni auth
    def self.connect_to_linkedin(auth, signed_in_resource=nil)
    user = User.where(:provider => auth.provider, :uid => auth.uid).first
    if user
      return user
    else
      registered_user = User.where(:email => auth.info.email).first
      if registered_user
        return registered_user
      else

        user = User.create(name:auth.info.first_name,
                            provider:auth.provider,
                            uid:auth.uid,
                            email:auth.info.email,
                            password:Devise.friendly_token[0,20],
                          )
      end

    end
  end
end













$brand-primary:               #c0392b;








def set_balance_for_current_user
      @user = User.find(params[:CurrentUserId])
      @user.balance = :CurrentUserBalance - :bid_amount
    end

    def set_balance_for_bid_user
      @user = User.find(:BidUserId)
      @user.balance = :BidUserBalance + :bid_amount
    end







<%= f.hidden_field :current_credits, :value => current_user.credit.debit %>









<% if false %>
        <%= link_to 'Show', post_bid_path(post) %>
        <%= link_to 'Edit', edit_post_bid_path(bid.id ) %>
        <%= link_to 'Destroy', bid, method: :delete, data: { confirm: 'Are you sure?' } %>
<% end %>




   <th><strong>What needs to be done</strong></th>
        <th><strong>Bid Amount</strong></th>
      </tr>


   <%= post.bid %>
         <%= @post.bid.bidinfo %>



<p><strong><%= @post.user.name if @post.user %></strong></p>
        <%= link_to("Bid on Post", new_post_bid_path(post)) %>
        <% if @post.user == current_user %>
          <%= link_to edit_post_path(@post) do %>
          <span class="glyphicon glyphicon-edit"></span>
          <% end %>
          <%= link_to @post, method: :delete, data: { confirm: 'Are you sure?' } do %>
            <span class="glyphicon glyphicon-trash"></span>
            Delete
            <% end %>
        <% else %>

        <% end %>







(params[:id])



 @bids = Bid.all
    @posts = Post.all



new_bid_path(:PostIdToBid => {:post_id => post.id})















config.omniauth :facebook, Facebook.app_id, Facebook.secret







<div class="panel-body">
    <%= form_for(resource, :as => resource_name, :url => registration_path(resource_name)) do |f| %>
      <%= devise_error_messages! %>

      <div class="form-group">
        <%= f.label :name %>
        <%= f.text_field :name, autofocus: true, class: "form-control" %>
      </div>

      <div class="form-group">
        <%= f.label :email %>
        <%= f.email_field :email, autofocus: true, class: "form-control" %>
      </div>

      <div class="form-group">
        <%= f.label :password %>
        <%= f.password_field :password, class: "form-control" %>
      </div>

      <div class="form-group">
       <%= f.label :company %>
       <%= f.text_field :company, class: "form-control", :autofocus => true %>
      </div>

      <div class="form-group">
       <%= f.label :image %>
       <%= f.file_field :image, class: "form-control", :autofocus => true %>
      </div>

      <div class="form-group">
        <%= f.submit "Sign up", class: "btn btn-primary" %>
      </div>
    <% end %>
  </div>





  <div class="panel-footer">
    <%= render "devise/shared/links" %>
  </div>




   # This is for omniauth
  def self.from_omniauth(auth)
    where(provider: auth.provider, uid: auth.uid).first_or_create do |user|
      user.email = auth.info.email
      user.password = Devise.friendly_token[0,20]
      user.name = auth.info.name   # assuming the user model has a name
      # user.image = auth.info.image # assuming the user model has an image
    end
  end


  def self.new_with_session(params, session)
    super.tap do |user|
      if data = session["devise.facebook_data"] && session["devise.facebook_data"]["extra"]["raw_info"]
        user.email = data["email"] if user.email.blank?


      end
    end





  # Home Page previous

      <p>
        <%= link_to "Log in", new_user_session_path, class: "btn btn-default btn-lg" %>
        <%= link_to "Sign up", new_user_registration_path, class: "btn btn-primary btn-lg" %>
      </p>






      <div class="form-group">
        <%= image_tag @user.image.url(:medium) %>
       <%= f.label :image %>
       <%= f.file_field :avatar, class: "form-control", :autofocus => true %>
      </div>







      <img src= '<%= image_tag current_user.image %>' alt= "Facebook Picture" class="img-circle">
















      <p><strong>Primary Skill</strong></p>
  <div class="col-lg-6">
    <div class="input-group">


        <input type="radio" name="primarySkill" value="Programming">  Programming
        <br>
         <input type="radio" name="primarySkill" value="Marketing">  Marketing
         <br>
          <input type="radio" name="primarySkill" value="Design">  Design
        <br>
         <input type="radio" name="primarySkill" value="Biz Dev"> Biz Dev
         <br>
    </div><!-- /input-group -->
  </div><!-- /.col-lg-6 -->

  <p><strong>Secondary Skill</strong></p>
  <div class="col-lg-6">
    <div class="input-group">
        <input type="radio" name="secondarySkill" value="Programming">  Programming
        <br>
         <input type="radio" name="secondarySkill" value="Marketing">  Marketing
         <br>
          <input type="radio" name="secondarySkill" value="Design">  Design
        <br>
         <input type="radio" name="secondarySkill" value="Biz Dev"> Biz Dev
         <br>
    </div><!-- /input-group -->
  </div><!-- /.col-lg-6 -->







  <% @accounts.each do |account| %>












  <div class="page-header">
  <h1>Profile</br> <small>Tell Fellow Collaborators what You are Working on and what your strengths are.</small></h1>
</div>

<%= image_tag current_user.image %>


    <h2><%= current_user.name %></h2>
    <p><%= current_user.email %></p>


    <% @accounts.each do |account| %>
        <%= account.company %><br>
        <%= account.bio %><br>
        <%= account.primarySkill %><br>
        <%= account.secondarySkill %><br>
        <%= link_to 'Show', account %>
        <%= link_to 'Edit', edit_account_path(account) %>
        <%= link_to 'Destroy', account, method: :delete, data: { confirm: 'Are you sure?' } %>
    <% end %>

<br>

      <p>
        <%= link_to "Update Profile", editaccount_path, class: "btn btn-default btn-lg" %>
      </p>
